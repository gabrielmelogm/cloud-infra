services:
  kong:
    image: kong:3.7
    container_name: kong-gateway
    restart: on-failure:10
    ports:
      - "80:8000"
      - "443:8443"
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: db
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yaml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
      KONG_PROXY_HOST: api.gabrielmelo.shop
      KONG_PROXY_PORT: 80
    volumes:
      - ./kong/declarative:/kong/declarative
    networks:
      - api_gateway
    extra_hosts:
      - host.docker.internal:host-gateway
  db:
    image: postgres:16-alpine
    container_name: kong-db
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    networks:
      - api_gateway
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "kong", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3

  kong-migrations:
    image: kong:3.7
    container_name: kong-migrations
    command: kong migrations bootstrap
    networks:
      - api_gateway
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: db
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    depends_on:
      db:
        condition: service_healthy

networks:
  api_gateway:
    driver: bridge
    external: true